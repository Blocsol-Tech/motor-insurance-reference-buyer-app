{
    "logReport": {
        "Flow Error": {
            "0": "Incorrect Flow as per context/timestamps - (select,on_select,init,on_init,confirm,on_confirm,update,on_update,status,on_status,search,on_search)"
        },
        "Schema": {
            "schemaErr0": "/select/1/context/transaction_id Transaction ID should be same across the transaction: \"69d8cc44-6090-49df-8a4b-d7b75fe4872e\"",
            "schemaErr1": "/select/2/context/transaction_id Transaction ID should be same across the transaction: \"69d8cc44-6090-49df-8a4b-d7b75fe4872e\"",
            "schemaErr2": "/select/3/context/transaction_id Transaction ID should be same across the transaction: \"69d8cc44-6090-49df-8a4b-d7b75fe4872e\"",
            "schemaErr3": "/on_select/0/message/order/fulfillments/0/@ondc~1org~1category must be equal to one of the allowed values (Express Delivery,Standard Delivery,Immediate Delivery,Same Day Delivery,Next Day Delivery,Takeaway)",
            "schemaErr4": "/on_select/1/context/transaction_id Transaction ID should be same across the transaction: \"69d8cc44-6090-49df-8a4b-d7b75fe4872e\"",
            "schemaErr5": "/on_select/1/message/order/fulfillments/0/@ondc~1org~1category must be equal to one of the allowed values (Express Delivery,Standard Delivery,Immediate Delivery,Same Day Delivery,Next Day Delivery,Takeaway)",
            "schemaErr6": "/on_select/1/message/order/fulfillments/0/state/descriptor/code must be equal to one of the allowed values (Serviceable,Non-serviceable)",
            "schemaErr7": "/on_select/1/message/order/payments/0 must have required property 'collected_by'",
            "schemaErr8": "/on_select/2/context/transaction_id Transaction ID should be same across the transaction: \"69d8cc44-6090-49df-8a4b-d7b75fe4872e\"",
            "schemaErr9": "/on_select/2/context/message_id Message ID for on_action API should be same as action API: \"c6de3d53-9d58-4ff2-a282-e5af2a04e900\"",
            "schemaErr10": "/on_select/2/context/message_id Message ID for on_action API should be same as action API: \"af72116c-0078-4765-bcb4-f00335e85ebf\"",
            "schemaErr11": "/on_select/2/context/message_id must match a schema in anyOf",
            "schemaErr12": "/on_select/2/message/order/fulfillments/0/@ondc~1org~1category must be equal to one of the allowed values (Express Delivery,Standard Delivery,Immediate Delivery,Same Day Delivery,Next Day Delivery,Takeaway)",
            "schemaErr13": "/on_select/3/context/transaction_id Transaction ID should be same across the transaction: \"69d8cc44-6090-49df-8a4b-d7b75fe4872e\"",
            "schemaErr14": "/on_select/3/context/message_id Message ID for on_action API should be same as action API: \"c6de3d53-9d58-4ff2-a282-e5af2a04e900\"",
            "schemaErr15": "/on_select/3/context/message_id Message ID for on_action API should be same as action API: \"af72116c-0078-4765-bcb4-f00335e85ebf\"",
            "schemaErr16": "/on_select/3/context/message_id must match a schema in anyOf",
            "schemaErr17": "/on_select/3/message/order/fulfillments/0/@ondc~1org~1category must be equal to one of the allowed values (Express Delivery,Standard Delivery,Immediate Delivery,Same Day Delivery,Next Day Delivery,Takeaway)",
            "schemaErr18": "/on_select/3/message/order/payments/0 must have required property 'collected_by'",
            "schemaErr19": "/init/0/context/transaction_id Transaction ID should be same across the transaction: \"69d8cc44-6090-49df-8a4b-d7b75fe4872e\"",
            "schemaErr20": "/on_init/0/context/transaction_id Transaction ID should be same across the transaction: \"69d8cc44-6090-49df-8a4b-d7b75fe4872e\"",
            "schemaErr21": "/on_init/0/message/order/quote/breakup/4/price/value must be string",
            "schemaErr22": "/confirm/0/context/transaction_id Transaction ID should be same across the transaction: \"69d8cc44-6090-49df-8a4b-d7b75fe4872e\"",
            "schemaErr23": "/confirm/0/message/order/quote/price/value must be equal to constant (10)",
            "schemaErr24": "/confirm/0/message/order/payments/0/@ondc~1org~1withholding_amount must be equal to constant (10.00)",
            "schemaErr25": "/on_confirm/0 must pass \"isFutureDated\" keyword validation",
            "schemaErr26": "/on_confirm/0/context/transaction_id Transaction ID should be same across the transaction: \"69d8cc44-6090-49df-8a4b-d7b75fe4872e\"",
            "schemaErr27": "/on_confirm/0/message/order/quote/breakup/4/price/value must be string",
            "schemaErr28": "/on_confirm/0/message/order/payments/0/@ondc~1org~1buyer_app_finder_fee_amount must be equal to constant (0.0)",
            "schemaErr29": "/update/0/context/transaction_id must be equal to constant (69d8cc44-6090-49df-8a4b-d7b75fe4872e)",
            "schemaErr30": "/update/0/message/order/payments/0 must have required property 'uri'",
            "schemaErr31": "/update/0/message/order/payments/0 must have required property 'tl_method'",
            "schemaErr32": "/on_update/0/context/transaction_id must be equal to constant (69d8cc44-6090-49df-8a4b-d7b75fe4872e)",
            "schemaErr33": "/on_status/0/context/transaction_id Transaction ID should be same across the transaction: \"69d8cc44-6090-49df-8a4b-d7b75fe4872e\"",
            "schemaErr34": "/on_status/0/message/order/payments/0/@ondc~1org~1buyer_app_finder_fee_amount must be equal to constant (0.0)",
            "schemaErr35": "/on_status/0/message/order/payments/0/@ondc~1org~1withholding_amount must be equal to constant (0)",
            "schemaErr36": "/on_status/1/context/transaction_id Transaction ID should be same across the transaction: \"69d8cc44-6090-49df-8a4b-d7b75fe4872e\"",
            "schemaErr37": "/on_status/1/message/order/payments/0/@ondc~1org~1buyer_app_finder_fee_amount must be equal to constant (0.0)",
            "schemaErr38": "/on_status/1/message/order/payments/0/@ondc~1org~1withholding_amount must be equal to constant (0)",
            "schemaErr39": "/on_status/2/context/transaction_id Transaction ID should be same across the transaction: \"69d8cc44-6090-49df-8a4b-d7b75fe4872e\"",
            "schemaErr40": "/on_status/2/message/order/payments/0/@ondc~1org~1buyer_app_finder_fee_amount must be equal to constant (0.0)",
            "schemaErr41": "/on_status/2/message/order/payments/0/@ondc~1org~1withholding_amount must be equal to constant (0)",
            "schemaErr42": "/on_status/3/context/transaction_id Transaction ID should be same across the transaction: \"69d8cc44-6090-49df-8a4b-d7b75fe4872e\"",
            "schemaErr43": "/on_status/3/message/order/payments/0/@ondc~1org~1buyer_app_finder_fee_amount must be equal to constant (0.0)",
            "schemaErr44": "/on_status/3/message/order/payments/0/@ondc~1org~1withholding_amount must be equal to constant (0)",
            "schemaErr45": "/on_status/4/context/transaction_id Transaction ID should be same across the transaction: \"69d8cc44-6090-49df-8a4b-d7b75fe4872e\"",
            "schemaErr46": "/on_status/4/message/order/payments/0/@ondc~1org~1buyer_app_finder_fee_amount must be equal to constant (0.0)",
            "schemaErr47": "/on_status/4/message/order/payments/0/@ondc~1org~1withholding_amount must be equal to constant (0)"
        },
        "Context": {
            "on_init_0": {
                "msgIdErr": "Message Id cannot be same for different sets of APIs"
            },
            "on_update_0": {
                "msgIdErr": "Message Id cannot be same for different sets of APIs"
            }
        },
        "Message": {
            "select_0": {
                "prvdrErr": "Provider with id 'P9080' does not exist in the catalog provided in /on_search",
                "itemErr0": "Item Id '6776841d49c82277c6c4ab8e' does not exist in /on_search"
            },
            "select_1": {
                "prvdrErr": "Provider with id 'P9080' does not exist in the catalog provided in /on_search",
                "itemErr0": "Item Id '6776841d49c82277c6c4ab8e' does not exist in /on_search"
            },
            "select_2": {
                "prvdrErr": "Provider with id 'P9080' does not exist in the catalog provided in /on_search",
                "itemErr0": "Item Id '6776841d49c82277c6c4ab8e' does not exist in /on_search"
            },
            "select_3": {
                "prvdrErr": "Provider with id 'P9080' does not exist in the catalog provided in /on_search",
                "itemErr0": "Item Id '6776841d49c82277c6c4ab8e' does not exist in /on_search"
            },
            "on_select_0": {
                "deliveryQuoteErr": "Delivery charges should be provided in quote/breakup when fulfillment is 'Serviceable'"
            },
            "on_select_1": {
                "fullfntTagErr": "Delivery terms (INCOTERMS) are required for exports in /fulfillments/tags"
            },
            "on_select_2": {
                "deliveryQuoteErr": "Delivery charges should be provided in quote/breakup when fulfillment is 'Serviceable'"
            },
            "on_select_3": {
                "fullfntTagErr": "Delivery terms (INCOTERMS) are required for exports in /fulfillments/tags",
                "deliveryQuoteErr": "Delivery charges should be provided in quote/breakup when fulfillment is 'Serviceable'"
            },
            "init_0": {
                "item-0-DiffErr": "In /items, 'quantity' mismatch from /on_select for item with id 6776841d49c82277c6c4ab8e"
            },
            "on_init_0": {
                "feeTypeErr": "Buyer Finder Fee amount mismatches from /search"
            },
            "confirm_0": {
                "item-0-DiffErr": "In /items, 'quantity' mismatch from /on_select for item with id 6776841d49c82277c6c4ab8e",
                "feeTypeErr": "Buyer Finder Fee amount mismatches from /search"
            },
            "on_confirm_0": {
                "feeTypeErr": "Buyer Finder Fee amount mismatches from /search"
            },
            "on_status_3": {
                "pickupTimeErr": "Pickup timestamp (fulfillments/start/time/timestamp) cannot change for fulfillment state - Out-for-delivery"
            },
            "on_status_4": {
                "deliveryTimeErr": "Delivery timestamp (fulfillments/end/time/timestamp) is required for fulfillment state - Order-delivered",
                "pickupTimeErr": "Pickup timestamp (fulfillments/start/time/timestamp) cannot change for fulfillment state - Order-delivered"
            },
            "search_0": {
                "RGC-end-Err": "Reverse Geocoding for `end` failed. Area Code 465654 not matching with 1.331209,103.946171 Lat-Long pair.",
                "areaCodeErr": "STD code could not be validated from the gps location"
            },
            "on_search_0": {
                "missingPRVDRTags-0-err": "seller_terms are required in /providers/tags"
            }
        }
    }
}